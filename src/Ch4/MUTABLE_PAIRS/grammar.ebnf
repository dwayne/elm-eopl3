Program ::= Expr

Expr    ::= Const
          | Var
          | Diff
          | Zero
          | If
          | Let
          | Proc
          | Letrec
          | Call
          | Set
          | Begin
          | Newpair
          | Left
          | Right
          | Setleft
          | Setright

Const   ::= Number
Var     ::= Id
Diff    ::= '-' '(' Expr ',' Expr ')'
Zero    ::= 'zero?' '(' Expr ')'
If      ::= 'if' Expr 'then' Expr 'else' Expr
Let     ::= 'let' Id '=' Expr 'in' Expr
Proc    ::= 'proc' '(' Id ')' Expr
Letrec  ::= 'letrec' { Id '(' Id ')' '=' Expr }* 'in' Expr
Call    ::= '(' Expr Expr ')'

Set     ::= 'set' Id '=' Expr
Begin   ::= 'begin' Expr { ';' Expr  }* 'end'

Newpair  ::= 'pair' '(' Expr ',' Expr ')'
Left     ::= 'left' '(' Expr ')'
Right    ::= 'right' '(' Expr ')'
Setleft  ::= 'setleft' '(' Expr ',' Expr ')'
Setright ::= 'setright' '(' Expr ',' Expr ')'

Number  ::= [0-9]+
Id      ::= [a-z]+

/* Use https://rr.red-dove.com/ui to view it as a Railroad Diagram. */
